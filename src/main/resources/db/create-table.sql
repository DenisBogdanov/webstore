DROP TABLE orders IF EXISTS;
DROP TABLE customer IF EXISTS;
DROP TABLE shipping_detail IF EXISTS;
DROP TABLE address IF EXISTS;
DROP TABLE cart_item IF EXISTS;
DROP TABLE cart IF EXISTS;
DROP TABLE products IF EXISTS;

CREATE TABLE products (
  id             VARCHAR(25) PRIMARY KEY,
  name           VARCHAR(50),
  description    VARCHAR(250),
  unit_price     DECIMAL,
  manufacturer   VARCHAR(50),
  category       VARCHAR(50),
  condition      VARCHAR(50),
  units_in_stock BIGINT,
  units_in_order BIGINT,
  discontinued   BOOLEAN
);


CREATE TABLE cart (
  id VARCHAR(50) PRIMARY KEY
);


CREATE TABLE cart_item (
  id         VARCHAR(75),
  product_id VARCHAR(25) FOREIGN KEY REFERENCES products (id),
  cart_id    VARCHAR(50) FOREIGN KEY REFERENCES cart (id),
  quantity   BIGINT,
  CONSTRAINT cart_item_pk PRIMARY KEY (ID, CART_ID)
);


CREATE TABLE address (
  id INTEGER IDENTITY PRIMARY KEY,
  door_no VARCHAR(25),
  street_name VARCHAR(25),
  area_name VARCHAR(25),
  state VARCHAR(25),
  country VARCHAR(25),
  zip VARCHAR(25)
);


CREATE TABLE CUSTOMER (
  id INTEGER IDENTITY PRIMARY KEY,
  name VARCHAR(25),
  phone_number VARCHAR(25),
  billing_address_id INTEGER FOREIGN KEY REFERENCES address(id)
);


CREATE TABLE SHIPPING_DETAIL (
  id INTEGER IDENTITY PRIMARY KEY,
  name VARCHAR(25),
  shipping_date VARCHAR(25),
  shipping_address_id INTEGER FOREIGN KEY REFERENCES address(id)
);


CREATE TABLE ORDERS (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000, INCREMENT BY 1) PRIMARY KEY,
  cart_id VARCHAR(50) FOREIGN KEY REFERENCES CART(id),
  customer_id INTEGER FOREIGN KEY REFERENCES CUSTOMER(id),
  shipping_detail_id INTEGER FOREIGN KEY REFERENCES SHIPPING_DETAIL(id)
);